You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.

Example:

Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
Output: 7 -> 0 -> 8
Explanation: 342 + 465 = 807.

---

输入一串数字表示两个非空链表,表示两个非负整数.数字以相反的顺序存储,比如输入123,则以321保存.
把两个数字相加并返回结果.
您可以假设这两个数字不包含任何前导零,除了数字0本身.

class ListNode:
    def __init__(self, x):
        self.val = x
        self.next = None

node1.val=2
node1.next->4
node2.val=4
node2.next->3
node3.val=3
node3.next=None